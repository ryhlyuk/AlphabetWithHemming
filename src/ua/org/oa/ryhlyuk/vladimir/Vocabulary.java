package ua.org.oa.ryhlyuk.vladimir;

import java.util.HashMap;

public class Vocabulary {
	
	public Double[] getDefaultVocabulary(char symbol){
		HashMap<Character, Double[]> map = new HashMap<Character, Double[]>();
		
		map.put('A', new Double[]{-0.5,0.5,0.5,0.5,-0.5,0.5,-0.5,-0.5,-0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,-0.5,-0.5,-0.5,0.5,0.5,-0.5,-0.5,-0.5,0.5});//A
		map.put('B', new Double[] {.5,.5,.5,.5,-.5,.5,-.5,-.5,-.5,.5,.5,.5,.5,.5,-.5,.5,-.5,-.5,-.5,.5,.5,.5,.5,.5,-.5});//B
		map.put('C', new Double[] {-.5,.5, .5, .5, .5,.5,-.5,-.5,-.5, -.5, .5,-.5,-.5,-.5,-.5, .5,-.5,-.5,-.5,-.5, -.5,.5,.5,.5,.5}); //C
		map.put('D', new Double[] { .5,.5, .5, .5, -.5,.5,-.5,-.5,-.5, .5,.5,-.5, -.5, -.5,  .5,.5,-.5,-.5,-.5, .5,.5,.5,.5,.5, -.5}); //D
		map.put('E', new Double[] {.5,.5,.5,.5,.5,.5,-.5,-.5,-.5,-.5, .5,.5,.5,.5,.5,.5,-.5,-.5,-.5,-.5,.5,.5,.5,.5,.5});//E
           map.put('F', new Double[] {.5,.5,.5,.5,.5,
            .5,-.5,-.5,-.5,-.5,
           .5,.5,.5,.5,.5,
            .5,-.5,-.5,-.5,-.5,
           .5,-.5,-.5,-.5,-.5
           });//F
           map.put('G', new Double[]{-.5,.5,.5,.5,-.5,
            .5,-.5,-.5,-.5,-.5,
            .5,.5,.5,.5,.5,
            .5,-.5,-.5,-.5,.5,
            -.5,.5,.5,.5,-.5
           });//G
           map.put('H', new Double[]{.5,-.5,-.5,-.5,.5,
            .5,-.5,-.5,-.5,.5,
           .5,.5,.5,.5,.5,
            .5,-.5,-.5,-.5,.5,
           .5,-.5,-.5,-.5,.5
           });//H
           map.put('I', new Double[]{-.5, .5,.5, .5,-.5,
           -.5,-.5,.5,-.5,-.5,
           -.5,-.5,.5,-.5,-.5,
           -.5,-.5,.5,-.5,-.5,
           -.5, .5,.5, .5,-.5
           });//I
           map.put('J', new Double[]{-.5,-.5,-.5, .5,-.5,
           -.5,-.5,-.5, .5,-.5,
           -.5,-.5,-.5, .5,-.5,
           -.5, .5,-.5, .5,-.5,
           -.5, .5,.5, .5,-.5
           });//J
           map.put('K', new Double[]{.5,-.5,-.5, .5,.5,
           .5,-.5,.5,-.5,-.5,
           .5,.5,-.5,-.5,-.5,
           .5,-.5,.5,-.5,-.5,
           .5,-.5,-.5, .5,.5
           });//K
           map.put('L', new Double[]{.5,-.5,-.5,-.5,-.5,
            .5,-.5,-.5,-.5,-.5,
           .5,-.5,-.5,-.5,-.5,
            .5,-.5,-.5,-.5,-.5,
           .5,.5,.5,.5,.5
           });//L
           map.put('M', new Double[]{.5,-.5,-.5, -.5,.5,
            .5, .5,-.5,.5,.5,
            .5,-.5, .5,-.5,.5,
            .5,-.5, .5,-.5,.5,
            .5,-.5,-.5,-.5,.5
           });//M
           map.put('N', new Double[]{.5,-.5,-.5, -.5,.5,
            .5, .5,-.5,-.5,.5,
            .5,-.5, .5,-.5,.5,
            .5,-.5,-.5, .5,.5,
            .5,-.5,-.5,-.5,.5
           });//N
           map.put('O', new Double[] {-.5,.5,.5,.5,-.5,
            .5, .5,-.5,-.5,.5,
            .5,-.5, -.5,-.5,.5,
            .5,-.5, -.5,-.5,.5,
            -.5,.5,.5,.5,-.5
           });//O
           map.put('P', new Double[]{.5,.5,.5, .5,-.5,
            .5,-.5,-.5,-.5,.5,
            .5,.5,.5,.5,-.5,
            .5,-.5,-.5,-.5,-.5,
            .5,-.5,-.5,-.5,-.5
           });//P
           map.put('Q', new Double[]{-.5,.5,.5, -.5,-.5,
            .5,-.5,-.5,.5,-.5,
            .5,-.5,-.5,.5,-.5,
            .5,-.5,-.5,.5,-.5,
            -.5,.5,.5,-.5,.5
           });//Q
           map.put('R', new Double[]{.5,.5,.5,.5,-.5,
            .5,-.5,-.5,-.5,.5,
            .5,.5,.5,.5,-.5,
            .5,-.5,-.5,.5,-.5,
            .5,-.5,-.5,-.5,.5
           });//R
           map.put('S', new Double[]{-.5,.5,.5,.5,.5,
            .5,-.5,-.5,-.5,-.5,
            -.5,.5,.5,.5,-.5,
            -.5,-.5,-.5,-.5,.5,
            .5,.5,.5,.5,-.5
           });//S
           map.put('T', new Double[] {.5,.5,.5, .5,.5,
            -.5,-.5,.5,-.5,-.5,
            -.5,-.5,.5,-.5,-.5,
            -.5,-.5,.5,-.5,-.5,
            -.5,-.5,.5,-.5,-.5
           });//T
           map.put('U', new Double[] {.5,-.5,-.5, -.5,.5,
            .5,-.5,-.5,-.5,.5,
            .5,-.5,-.5,-.5,.5,
            .5,-.5,-.5,-.5,.5,
            -.5,.5,.5,.5,-.5
           });//U
           map.put('V', new Double[]{.5,-.5,-.5, -.5,.5,
            .5,-.5,-.5,-.5,.5,
            .5,-.5,-.5,-.5,.5,
            -.5,.5,-.5,.5,-.5,
            -.5,-.5,.5,-.5,-.5
           });//V
           map.put('W', new Double[]{.5,-.5,.5, -.5,.5,
            .5,-.5,.5,-.5,.5,
            .5,-.5,.5,-.5,.5,
            .5,-.5,.5,-.5,.5,
            -.5,.5,-.5,.5,-.5
           });//W
           map.put('X', new Double[]{.5,-.5,-.5, -.5,.5,
            -.5,.5,-.5,.5,-.5,
            -.5,-.5,.5,-.5,-.5,
            -.5,.5,-.5,.5,-.5,
            .5,-.5,-.5,-.5,.5
           });//X
           map.put('Y', new Double[]{.5,-.5,-.5, -.5,.5,
            .5,-.5,-.5,-.5,.5,
            -.5,.5,-.5,.5,-.5,
            -.5,-.5,.5,-.5,-.5,
            -.5,-.5,.5,-.5,-.5
           });//Y
           map.put('Z', new Double[]{.5,.5,.5, .5,.5,
                   -.5,-.5,-.5,.5,-.5,
                   -.5,-.5,.5,-.5,-.5,
                   -.5,.5,-.5,-.5,-.5,
                   .5,.5,.5,.5,.5
                  });//Z
           map.put('[', new Double[]{.5,.5,.5, .5,.5,
                   -.5,-.5,-.5,.5,-.5,
                   -.5,-.5,.5,-.5,-.5,
                   -.5,.5,-.5,-.5,-.5,
                   .5,.5,.5,.5,.5
                  });//Z
                  
		return map.get(symbol);
	}
}
